import { WithContext, WebSite } from "schema-dts";

const BASE_URL = "https://ragner.ai";

export const jsonLd: WithContext<WebSite> = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  name: "Ragner",
  image: `${BASE_URL}/og-image.png`,
  description:
    "RAGNER is an AI orchestration swarm that transforms your protocol documentation into serverless AI agents. It simplifies dev integrations and becomes a callable tool for other AI agents.",
  provider: {
    "@type": "Organization",
    name: "Ragner Ai",
    url: BASE_URL,
  },
  thumbnailUrl: `${BASE_URL}/og-image.png`,
  keywords: [
    "AI agent swarms",
    "API to agents",
    "API RAG",
    "Web3 API integration",
    "Blockchain API agents",
    "Developer tooling",
    "AI-powered endpoints",
    "Instant API deployment",
    "Composable AI agents",
    "Blockchain development",
    "API automation",
    "Web3 development tools",
    "AI integration platform",
    "Decentralized API agents",
    "Intelligent API tooling",
    "Developer productivity",
    "Ragner.ai",
    "artificial intelligence",
    "API orchestration",
    "blockchain technology",
    "developer tools",
    "AI agents",
    "API documentation",
    "smart contract development",
    "web3 infrastructure",
    "enterprise API solutions",
    "microservices orchestration",
    "API performance optimization",
    "distributed systems",
    "API security enhancement",
    "autonomous API agents",
    "API monitoring",
    "self-healing APIs",
    "API analytics",
    "machine learning APIs",
    "API governance",
    "serverless integration",
    "API testing automation",
    "cloud-native APIs",
    "API versioning",
    "real-time API processing",
    "API scalability",
    "blockchain interoperability",
    "smart contract automation",
    "DeFi integration",
    "cross-chain compatibility",
    "API load balancing",
    "API gateway optimization",
    "zero-trust API security",
    "API monetization",
    "multi-cloud API deployment",
    "API lifecycle management",
    "event-driven architecture",
    "API rate limiting",
    "GraphQL integration",
    "REST API optimization",
  ],
};
